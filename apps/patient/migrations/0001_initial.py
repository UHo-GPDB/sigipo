# Generated by Django 4.2.1 on 2023-06-08 14:17

import apps.patient.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("geographic_location", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "identity_card",
                    models.CharField(
                        max_length=11,
                        validators=[
                            apps.patient.validators.IdentityCardValidator(6, 11),
                            apps.patient.validators.only_numbers_validator,
                        ],
                        verbose_name="Carnet de Identidad",
                    ),
                ),
                ("first_name", models.CharField(max_length=128, verbose_name="Nombre")),
                (
                    "last_name",
                    models.CharField(max_length=255, verbose_name="Apellidos"),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Calle"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Número"
                    ),
                ),
                (
                    "building",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Edificio"
                    ),
                ),
                (
                    "apartment",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Apartamento",
                    ),
                ),
                (
                    "sex",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "No definido"), (1, "Masculino"), (2, "Femenino")],
                        null=True,
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "between_streets",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Entre calles",
                    ),
                ),
                (
                    "division",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Reparto"
                    ),
                ),
                (
                    "race",
                    models.IntegerField(
                        choices=[
                            (0, "No Definido"),
                            (1, "Blanca"),
                            (2, "Negra"),
                            (3, "Mestizo"),
                            (4, "Amarillo"),
                        ],
                        default=0,
                        verbose_name="Raza",
                    ),
                ),
                (
                    "medical_record",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="No. Historia Clínica",
                    ),
                ),
                ("is_oncologic", models.BooleanField(default=False)),
                (
                    "born_municipality",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="born_municipality",
                        to="geographic_location.municipality",
                        verbose_name="Municipio natal",
                    ),
                ),
                (
                    "residence_municipality",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="residence_municipality",
                        to="geographic_location.municipality",
                        verbose_name="Municipio de residencia",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paciente",
                "verbose_name_plural": "pacientes",
                "ordering": ["updated_at"],
                "permissions": (
                    ("add_oncologic", "Puede añadir pacientes al registro de cáncer"),
                    ("view_oncologic", "Puede añadir pacientes al registro de cáncer"),
                    (
                        "change_oncologic",
                        "Puede añadir pacientes al registro de cáncer",
                    ),
                    (
                        "delete_oncologic",
                        "Puede añadir pacientes al registro de cáncer",
                    ),
                ),
                "indexes": [
                    models.Index(
                        fields=["last_name", "first_name"],
                        name="patient_pat_last_na_90bcb7_idx",
                    ),
                    models.Index(
                        fields=["first_name"], name="patient_pat_first_n_b4754d_idx"
                    ),
                    models.Index(
                        fields=["last_name"], name="patient_pat_last_na_f630ca_idx"
                    ),
                    models.Index(
                        fields=["identity_card"], name="patient_pat_identit_403e47_idx"
                    ),
                    models.Index(
                        fields=["medical_record"], name="patient_pat_medical_738b43_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="patient",
            constraint=models.UniqueConstraint(
                fields=("identity_card",), name="patient_identity_card_constraints"
            ),
        ),
    ]
