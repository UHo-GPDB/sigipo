# Generated by Django 4.1.7 on 2023-06-12 20:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("patient", "0001_initial"),
        ("employee", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Energy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("energy", models.CharField(max_length=256, verbose_name="Energía")),
                ("enable", models.BooleanField(verbose_name="Habilitado")),
            ],
            options={
                "verbose_name": "Energía",
                "verbose_name_plural": "Energías",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=256, verbose_name="Nombre del equipo"),
                ),
                (
                    "modality",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Teleterapia"), (1, "Braquiterapia")],
                        null=True,
                        verbose_name="Modalidad",
                    ),
                ),
                (
                    "energy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="radiotherapy.energy",
                        verbose_name="Energía",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipo",
                "verbose_name_plural": "Equipos",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="RiskOrgans",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=256, verbose_name="Nombre del Órgano"),
                ),
                (
                    "type",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Órganos de Riesgo"), (1, "Volumen Diana")],
                        null=True,
                        verbose_name="Tipo de Órganos",
                    ),
                ),
                (
                    "alpha_beta",
                    models.IntegerField(default=0, verbose_name="Alpha/Beta"),
                ),
                ("dosis_limit", models.FloatField(verbose_name="Límite de Dosis")),
            ],
            options={
                "verbose_name": "Órganos de Riesgo",
                "verbose_name_plural": "Órganos de Riesgos",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="TACStudy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location",
                    models.CharField(max_length=256, verbose_name="Localización"),
                ),
                (
                    "chunck_distance",
                    models.FloatField(verbose_name="Distancia entre cortes (mm)"),
                ),
                (
                    "patient_position",
                    models.CharField(
                        max_length=256, verbose_name="Posición del Paciente"
                    ),
                ),
                (
                    "protocol",
                    models.CharField(
                        max_length=256, verbose_name="Protocolo utilizado"
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employee.doctor",
                        verbose_name="Doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patient.patient",
                        verbose_name="Paciente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Estudio",
                "verbose_name_plural": "Estudios",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Prescription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "treatment_serie",
                    models.CharField(
                        max_length=256, verbose_name="Serie de Tratamiento"
                    ),
                ),
                (
                    "modality",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Teleterapia"), (1, "Braquiterapia")],
                        null=True,
                        verbose_name="Modalidad",
                    ),
                ),
                ("irradiate_other_locations", models.BooleanField(default=False)),
                ("reirradiated_patient", models.BooleanField(default=False)),
                ("status", models.CharField(max_length=256, verbose_name="Estado")),
                (
                    "location",
                    models.CharField(max_length=256, verbose_name="Localizacion"),
                ),
                (
                    "fractial_dosis",
                    models.FloatField(verbose_name="Dosis por Fracción"),
                ),
                ("total_dosis", models.FloatField(verbose_name="Dosis Total")),
                (
                    "session_number",
                    models.IntegerField(verbose_name="Número de aplicaciones"),
                ),
                ("weekly_session", models.IntegerField(verbose_name="Sesión semanal")),
                (
                    "daily_session",
                    models.IntegerField(default=1, verbose_name="Sesión diaria"),
                ),
                (
                    "equipo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="radiotherapy.equipment",
                    ),
                ),
                (
                    "organs_at_risk",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="radiotherapy.riskorgans",
                        verbose_name="Órganos en riesgo/ Volúmen diana",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="patient.patient",
                    ),
                ),
                (
                    "radiotherapist_in_charge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.doctor",
                    ),
                ),
                (
                    "registred_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Registrado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prescripción",
                "verbose_name_plural": "Prescripciones",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="MedicalTurn",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("list_number", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField(verbose_name="CID")),
                ("id", models.CharField(max_length=256, verbose_name="ID")),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="Dirección"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Localización",
                    ),
                ),
                (
                    "stage",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="Etapa"
                    ),
                ),
                (
                    "waiting_list",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Añadir a la lista de espera",
                    ),
                ),
                (
                    "date_first_apointment",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de la primera consulta",
                    ),
                ),
                (
                    "date_culmination_treatment",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de culminación del tratamiento",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.doctor",
                        verbose_name="Doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patient.patient",
                        verbose_name="Paciente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Turno Médico",
                "verbose_name_plural": "Turnos Médicos",
                "ordering": ["list_number"],
            },
        ),
        migrations.CreateModel(
            name="DosimetryPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "modality",
                    models.CharField(max_length=256, verbose_name="Modalidad"),
                ),
                (
                    "radiation_therapist_in_charge",
                    models.CharField(
                        max_length=256, verbose_name="Radioterapeuta a cargo"
                    ),
                ),
                ("team", models.CharField(max_length=256, verbose_name="Equipo")),
                ("plan", models.TextField(verbose_name="Etiqueta del Plan")),
                (
                    "fractial_dosis",
                    models.FloatField(verbose_name="Dosis por Fracción"),
                ),
                ("total_dosis", models.FloatField(verbose_name="Dosis Total")),
                (
                    "session_number",
                    models.IntegerField(verbose_name="Número de aplicaciones"),
                ),
                (
                    "anatomic_data_aquisition",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Medidas del Paciente"),
                            (1, "Contorno"),
                            (2, "Radiografías"),
                            (3, "TAC"),
                        ],
                        null=True,
                        verbose_name="Adquisición de datos Anatómicos",
                    ),
                ),
                (
                    "icru_dosis",
                    models.FloatField(verbose_name="Dosis en ICRU/Isocentro"),
                ),
                ("max_dosis", models.FloatField(verbose_name="Dosis máxima (%)")),
                (
                    "doctor_asigned",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employee.doctor",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patient.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan de Dosimentría",
                "verbose_name_plural": "Planes de Dosimentría",
                "ordering": ["pk"],
            },
        ),
        migrations.CreateModel(
            name="Accessories",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="Nombre")),
                ("type", models.CharField(max_length=256, verbose_name="Tipo")),
                ("eid", models.CharField(max_length=256, verbose_name="ID")),
                (
                    "enable_equipment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="radiotherapy.equipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Accesorios",
                "verbose_name_plural": "Accesorios",
                "ordering": ["pk"],
            },
        ),
    ]
